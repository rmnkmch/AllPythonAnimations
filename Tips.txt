--format=gif
manim -pql AllPythonAnimations.py Example
cd /d D:\разобрать\Software\Python\AllPythonAnimations\AllPythonAnimations


class Example(Scene):
def construct(self):

equation = Tex(r'$d\left(p, q\right)=d\left(q, p\right)=\sqrt{(q_1-p_1)^2+(q_2-p_2)^2+...+(q_n-p_n)^2}=\sqrt{\sum_{i=1}^n\left(q_i-p_i\right)^2}$')

x_var = Variable(start, 'x', num_decimal_places=3)
sqr_var.add_updater(lambda v: v.tracker.set_value(x_var.tracker.get_value()**2))
self.play(x_var.tracker.animate.set_value(5), run_time=2, rate_func=linear)

MarkupText(f'all in red <span fgcolor="{YELLOW}">except this</span>', color=RED)
MarkupText('nice <gradient from="RED" to="YELLOW">intermediate</gradient> gradient', gradient=(BLUE, GREEN))
MarkupText('fl ligature <gradient from="RED" to="YELLOW" offset="1,1">floating</gradient> inside')
MarkupText("<b><i><s><u><big><small><sub><sup><tt></>")
MarkupText('<span underline="double">foo</span> <span underline="error">bar</span>')
MarkupText('all in sans <span font_family="serif">except this</span>', font="sans")
MarkupText('<span font_family="serif">mixing</span> <span font_family="sans">fonts</span> <span font_family="monospace">is ugly</span>')

class MovingAndZoomingCamera(MovingCameraScene):
self.play(self.camera.frame.animate.move_to(s).set(width=s.width*2))
self.play(self.camera.frame.animate.move_to(t).set(width=t.width*2))
self.play(self.camera.frame.animate.move_to(ORIGIN).set(width=14))

class ChangingZoomScale(ZoomedScene):
    def __init__(self, **kwargs):
            ZoomedScene.__init__(
            self,
            zoom_factor=0.3,
            zoomed_display_height=1,
            zoomed_display_width=3,
            image_frame_stroke_width=20,
            zoomed_camera_config={
                "default_frame_stroke_width": 3},
            **kwargs
        )

self.activate_zooming(animate=False)
self.play(self.zoomed_camera.frame.animate.scale(4))
self.play(self.zoomed_camera.frame.animate.shift(0.5 * DOWN))